# Generated by Django 4.0.3 on 2023-11-24 10:51

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ElectrodeDynamic',
            fields=[
                ('electrode_dynamic_id', models.AutoField(primary_key=True, serialize=False)),
                ('electrode_number', models.IntegerField(blank=True, null=True)),
                ('electrode_status', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Electrode - Dynamische gegevens',
                'verbose_name_plural': 'Electrodes - Dynamische gegevens',
                'db_table': 'gmw"."electrodes_dynamic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='gmw_registration_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.CharField(blank=True, max_length=254, null=True)),
                ('bro_id', models.CharField(blank=True, max_length=254, null=True)),
                ('event_id', models.CharField(blank=True, max_length=254, null=True)),
                ('validation_status', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_id', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_type', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_status', models.CharField(blank=True, max_length=254, null=True)),
                ('comments', models.CharField(blank=True, max_length=10000, null=True)),
                ('last_changed', models.CharField(blank=True, max_length=254, null=True)),
                ('corrections_applied', models.BooleanField(blank=True, null=True)),
                ('quality_regime', models.CharField(blank=True, max_length=254, null=True)),
                ('file', models.CharField(blank=True, max_length=254, null=True)),
                ('process_status', models.CharField(blank=True, max_length=254, null=True)),
                ('object_id_accountable_party', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'GMW Synchronisatie Log',
                'verbose_name_plural': 'GMW Synchronisatie Logs',
                'db_table': 'aanlevering"."gmw_registration_log',
            },
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringTubesStatic',
            fields=[
                ('groundwater_monitoring_tube_static_id', models.AutoField(primary_key=True, serialize=False)),
                ('deliver_gld_to_bro', models.BooleanField(blank=True, default=False)),
                ('tube_number', models.IntegerField(blank=True, null=True)),
                ('tube_type', models.TextField(blank=True, null=True)),
                ('artesian_well_cap_present', models.TextField(blank=True, null=True)),
                ('sediment_sump_present', models.TextField(blank=True, null=True)),
                ('number_of_geo_ohm_cables', models.IntegerField(blank=True, null=True)),
                ('tube_material', models.TextField(blank=True, null=True)),
                ('screen_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('sock_material', models.TextField(blank=True, null=True)),
                ('sediment_sump_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Filter - Statische gegevens',
                'verbose_name_plural': 'Grondwatermonitoring Filters - Statische gegevens',
                'db_table': 'gmw"."groundwater_monitoring_tubes_static',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringWellStatic',
            fields=[
                ('groundwater_monitoring_well_static_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_object_type', models.TextField(blank=True, null=True)),
                ('bro_id', models.CharField(blank=True, max_length=15, null=True)),
                ('request_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_accountable_party', models.IntegerField(blank=True, null=True)),
                ('delivery_responsible_party', models.IntegerField(blank=True, null=True)),
                ('quality_regime', models.TextField(blank=True, null=True)),
                ('under_privilege', models.TextField(blank=True, null=True)),
                ('delivery_context', models.TextField(blank=True, null=True)),
                ('construction_standard', models.TextField(blank=True, null=True)),
                ('initial_function', models.TextField(blank=True, null=True)),
                ('nitg_code', models.CharField(blank=True, max_length=256, null=True)),
                ('olga_code', models.CharField(blank=True, max_length=256, null=True)),
                ('well_code', models.CharField(blank=True, max_length=256, null=True)),
                ('monitoring_pdok_id', models.IntegerField(blank=True, null=True)),
                ('coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, null=True, srid=28992)),
                ('reference_system', models.TextField(blank=True, null=True)),
                ('horizontal_positioning_method', models.TextField(blank=True, null=True)),
                ('local_vertical_reference_point', models.TextField(blank=True, null=True)),
                ('well_offset', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('vertical_datum', models.TextField(blank=True, null=True)),
                ('deliver_gmw_to_bro', models.BooleanField(blank=True, default=False)),
                ('complete_bro', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Put - Statische gegevens',
                'verbose_name_plural': 'Grondwatermonitoring Putten - Statische gegevens',
                'db_table': 'gmw"."groundwater_monitoring_well_static',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaintenanceParty',
            fields=[
                ('maintenance_party_id', models.AutoField(primary_key=True, serialize=False)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('function', models.CharField(blank=True, max_length=100, null=True)),
                ('organisation', models.CharField(blank=True, max_length=100, null=True)),
                ('adress', models.CharField(blank=True, max_length=254, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=254, null=True)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('mobilephone', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Onderhoudsteam',
                'verbose_name_plural': 'Onderhoudsteams',
                'db_table': 'gmw"."maintenance_party',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('picture_id', models.AutoField(primary_key=True, serialize=False)),
                ('recording_date', models.DateField(blank=True, null=True)),
                ('picture', models.CharField(blank=True, max_length=254, null=True)),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
                ('groundwater_monitoring_well', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
            ],
            options={
                'verbose_name': 'Foto',
                'verbose_name_plural': 'Fotos',
                'db_table': 'gmw"."pictures',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('maintenance_id', models.AutoField(primary_key=True, serialize=False)),
                ('notification_date', models.DateField(blank=True, null=True)),
                ('kind_of_maintenance', models.CharField(choices=[], max_length=254)),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
                ('reporter', models.IntegerField(blank=True, null=True)),
                ('execution_date', models.DateField(blank=True, null=True)),
                ('execution_by', models.IntegerField(blank=True, null=True)),
                ('groundwater_monitoring_tube', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubesstatic')),
                ('groundwater_monitoring_well', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
                ('picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.picture')),
            ],
            options={
                'verbose_name': 'Onderhoudsmoment',
                'verbose_name_plural': 'Onderhoudsmomenten',
                'db_table': 'gmw"."maintenance',
            },
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringWellDynamic',
            fields=[
                ('groundwater_monitoring_well_dynamic_id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_standpipes', models.IntegerField(blank=True, null=True)),
                ('ground_level_stable', models.TextField(blank=True, null=True)),
                ('well_stability', models.TextField(blank=True, null=True)),
                ('owner', models.IntegerField(blank=True, null=True)),
                ('maintenance_responsible_party', models.IntegerField(blank=True, null=True)),
                ('well_head_protector', models.TextField(blank=True, null=True)),
                ('deliver_gld_to_bro', models.BooleanField(default=False)),
                ('ground_level_position', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('ground_level_positioning_method', models.TextField(blank=True, null=True)),
                ('groundwater_monitoring_well', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Put - Dynamische gegevens',
                'verbose_name_plural': 'Grondwatermonitoring Putten - Dynamische gegevens',
                'db_table': 'gmw"."groundwater_monitoring_well_dynamic',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='groundwatermonitoringtubesstatic',
            name='groundwater_monitoring_well',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic'),
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringTubesDynamic',
            fields=[
                ('groundwater_monitoring_tube_dynamic_id', models.AutoField(primary_key=True, serialize=False)),
                ('tube_top_diameter', models.IntegerField(blank=True, null=True)),
                ('variable_diameter', models.TextField(blank=True, null=True)),
                ('tube_status', models.TextField(blank=True, null=True)),
                ('tube_top_position', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('tube_top_positioning_method', models.TextField(blank=True, null=True)),
                ('tube_packing_material', models.TextField(blank=True, null=True)),
                ('glue', models.TextField(blank=True, null=True)),
                ('plain_tube_part_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('inserted_part_diameter', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('inserted_part_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('inserted_part_material', models.TextField(blank=True, null=True)),
                ('groundwater_monitoring_tube_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubesstatic')),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Filter - Dynamische gegevens',
                'verbose_name_plural': 'Grondwatermonitoring Filters - Dynamische gegevens',
                'db_table': 'gmw"."groundwater_monitoring_tubes_dynamic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoOhmCable',
            fields=[
                ('geo_ohm_cable_id', models.AutoField(primary_key=True, serialize=False)),
                ('cable_number', models.IntegerField(blank=True, null=True)),
                ('groundwater_monitoring_tube_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubesstatic')),
            ],
            options={
                'verbose_name': 'Geo Ohm Kabel',
                'verbose_name_plural': 'Geo Ohm Kabels',
                'db_table': 'gmw"."geo_ohm_cable_static',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('change_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(blank=True, max_length=200, null=True)),
                ('event_date', models.CharField(blank=True, max_length=254, null=True)),
                ('delivered_to_bro', models.BooleanField(blank=True, default=False)),
                ('electrode_dynamic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.electrodedynamic')),
                ('groundwater_monitoring_well_dynamic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwelldynamic')),
                ('groundwater_monitoring_well_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
                ('groundwater_monitoring_well_tube_dynamic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubesdynamic')),
            ],
            options={
                'verbose_name': 'Tussentijdse Gebeurtenis',
                'verbose_name_plural': 'Tussentijdse Gebeurtenissen',
                'db_table': 'gmw"."event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ElectrodeStatic',
            fields=[
                ('electrode_static_id', models.AutoField(primary_key=True, serialize=False)),
                ('electrode_packing_material', models.TextField(blank=True, null=True)),
                ('electrode_position', models.TextField(blank=True, null=True)),
                ('geo_ohm_cable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.geoohmcable')),
            ],
            options={
                'verbose_name': 'Electrode - Statische gegevens',
                'verbose_name_plural': 'Electrodes - Statische gegevens',
                'db_table': 'gmw"."electrodes_static',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='electrodedynamic',
            name='electrode_static',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.electrodestatic'),
        ),
    ]
