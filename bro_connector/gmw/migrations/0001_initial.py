# Generated by Django 4.0.3 on 2024-02-08 09:02

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ElectrodeDynamic',
            fields=[
                ('electrode_dynamic_id', models.AutoField(primary_key=True, serialize=False)),
                ('electrode_status', models.CharField(blank=True, choices=[('onbruikbaar', 'onbruikbaar'), ('gebruiksklaar', 'gebruiksklaar'), ('nietGebruiksklaar', 'nietGebruiksklaar'), ('onbekend', 'onbekend')], max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Electrode - Dynamische gegevens',
                'verbose_name_plural': 'Electrodes - Dynamische gegevens',
                'db_table': 'gmw"."electrode_dynamic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='gmw_registration_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.CharField(blank=True, max_length=254, null=True)),
                ('bro_id', models.CharField(blank=True, max_length=254, null=True)),
                ('event_id', models.CharField(blank=True, max_length=254, null=True)),
                ('validation_status', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_id', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_type', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_status', models.CharField(blank=True, max_length=254, null=True)),
                ('comments', models.CharField(blank=True, max_length=10000, null=True)),
                ('last_changed', models.CharField(blank=True, max_length=254, null=True)),
                ('corrections_applied', models.BooleanField(blank=True, null=True)),
                ('quality_regime', models.CharField(blank=True, max_length=254, null=True)),
                ('file', models.CharField(blank=True, max_length=254, null=True)),
                ('process_status', models.CharField(blank=True, max_length=254, null=True)),
                ('object_id_accountable_party', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'GMW Synchronisatie Log',
                'verbose_name_plural': 'GMW Synchronisatie Logs',
                'db_table': 'aanlevering"."gmw_registration_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringTubeStatic',
            fields=[
                ('groundwater_monitoring_tube_static_id', models.AutoField(primary_key=True, serialize=False)),
                ('deliver_gld_to_bro', models.BooleanField(blank=True, default=False)),
                ('tube_number', models.IntegerField(blank=True, null=True)),
                ('tube_type', models.CharField(blank=True, choices=[('minifilter', 'minifilter'), ('standaardbuis', 'standaardbuis'), ('volledigFilter', 'volledigFilter'), ('filterlozeBuis', 'filterlozeBuis')], max_length=200, null=True)),
                ('artesian_well_cap_present', models.CharField(blank=True, max_length=200, null=True)),
                ('sediment_sump_present', models.CharField(blank=True, max_length=200, null=True)),
                ('number_of_geo_ohm_cables', models.IntegerField(blank=True, null=True)),
                ('tube_material', models.CharField(blank=True, choices=[('beton', 'beton'), ('gres', 'gres'), ('hout', 'hout'), ('ijzer', 'ijzer'), ('koper', 'koper'), ('messing', 'messing'), ('pe', 'pe'), ('peHighDensity', 'peHighDensity'), ('peLowDensity', 'peLowDensity'), ('peHighDensityPvc', 'peHighDensityPvc'), ('pePvc', 'pePvc'), ('pvc', 'pvc'), ('staal', 'staal'), ('staalGegalvaniseerd', 'staalGegalvaniseerd'), ('staalRoestvrij', 'staalRoestvrij'), ('teflon', 'teflon'), ('asbest', 'asbest'), ('houtStaal', 'houtStaal'), ('koperStaal', 'koperStaal'), ('onbekend', 'onbekend'), ('pvcStaal', 'pvcStaal')], max_length=200, null=True)),
                ('screen_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('sock_material', models.CharField(blank=True, choices=[('geen', 'geen'), ('kopergaas', 'kopergaas'), ('nylon', 'nylon'), ('pp', 'pp'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('sediment_sump_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Filter',
                'verbose_name_plural': 'Grondwatermonitoring Filters',
                'db_table': 'gmw"."groundwater_monitoring_tube_static',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringWellStatic',
            fields=[
                ('groundwater_monitoring_well_static_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_object_type', models.CharField(blank=True, max_length=256, null=True)),
                ('bro_id', models.CharField(blank=True, max_length=15, null=True)),
                ('request_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_accountable_party', models.IntegerField(blank=True, null=True)),
                ('delivery_responsible_party', models.IntegerField(blank=True, null=True)),
                ('quality_regime', models.CharField(blank=True, max_length=256, null=True)),
                ('under_privilege', models.CharField(blank=True, max_length=256, null=True)),
                ('delivery_context', models.CharField(blank=True, choices=[('GBM', 'GBM'), ('KRW', 'KRW'), ('monitoringBijDrinkwaterwinning', 'monitoringBijDrinkwaterwinning'), ('NBW', 'NBW'), ('NR', 'NR'), ('OGW', 'OGW'), ('OG', 'OW'), ('publiekeTaak', 'publiekeTaak'), ('WW', 'WW'), ('archiefoverdracht', 'archiefoverdracht')], max_length=200, null=True)),
                ('construction_standard', models.CharField(blank=True, choices=[('BWsb', 'BWsb'), ('geen', 'geen'), ('IBR', 'IBR'), ('NEN5104', 'NEN5104'), ('NEN5744', 'NEN5744'), ('NEN5766', 'NEN5766'), ('RWSgwmon', 'RWSgwmon'), ('SIKB2001v6.0', 'SIKB2001v6.0'), ('STOWAgwst', 'STOWAgwst'), ('VKB2001', 'VKB2001'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('initial_function', models.CharField(blank=True, choices=[('brandput', 'brandput'), ('kwaliteit', 'kwaliteit'), ('kwaliteitStand', 'kwaliteitStand'), ('onttrekking', 'onttrekking'), ('stand', 'stand'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('nitg_code', models.CharField(blank=True, max_length=256, null=True)),
                ('olga_code', models.CharField(blank=True, max_length=256, null=True)),
                ('well_code', models.CharField(blank=True, max_length=256, null=True)),
                ('monitoring_pdok_id', models.IntegerField(blank=True, null=True)),
                ('coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, null=True, srid=28992)),
                ('reference_system', models.CharField(blank=True, max_length=256, null=True)),
                ('horizontal_positioning_method', models.CharField(blank=True, choices=[('DGPS50tot200cm', 'DGPS50tot200cm'), ('GPS200tot1000cm', 'GPS200tot1000cm'), ('RTKGPS0tot2cm', 'RTKGPS0tot2cm'), ('RTKGPS2tot5cm', 'RTKGPS2tot5cm'), ('RTKGPS5tot10cm', 'RTKGPS5tot10cm'), ('RTKGPS10tot50cm', 'RTKGPS10tot50cm'), ('tachymetrie0tot10cm', 'tachymetrie0tot10cm'), ('tachymetrie10tot50cm', 'tachymetrie10tot50cm'), ('GBKNOnbekend', 'GBKNOnbekend'), ('GPSOnbekend', 'GPSOnbekend'), ('kaartOnbekend', 'kaartOnbekend'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('local_vertical_reference_point', models.CharField(blank=True, choices=[('NAP', 'NAP')], max_length=200, null=True)),
                ('well_offset', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('vertical_datum', models.CharField(blank=True, choices=[('NAP', 'NAP')], max_length=200, null=True)),
                ('in_management', models.BooleanField(blank=True, default=True, null=True)),
                ('deliver_gmw_to_bro', models.BooleanField(blank=True, default=False)),
                ('complete_bro', models.BooleanField(blank=True, default=False)),
                ('last_horizontal_positioning_date', models.DateField(blank=True, null=True)),
                ('construction_coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, null=True, srid=28992)),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Put',
                'verbose_name_plural': 'Grondwatermonitoring Putten',
                'db_table': 'gmw"."groundwater_monitoring_well_static',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaintenanceParty',
            fields=[
                ('maintenance_party_id', models.AutoField(primary_key=True, serialize=False)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('function', models.CharField(blank=True, max_length=100, null=True)),
                ('organisation', models.CharField(blank=True, max_length=100, null=True)),
                ('adress', models.CharField(blank=True, max_length=254, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('place', models.CharField(blank=True, max_length=254, null=True)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('mobilephone', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Onderhoudsteam',
                'verbose_name_plural': 'Onderhoudsteams',
                'db_table': 'gmw"."maintenance_party',
            },
        ),
        migrations.CreateModel(
            name='XMLImport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='bulk')),
                ('report', models.TextField(blank=True, help_text='process description', null=True)),
                ('checked', models.BooleanField(blank=True, default=False, editable=False, help_text='checked', null=True)),
                ('imported', models.BooleanField(blank=True, default=False, editable=False, null=True, verbose_name='fully imported')),
            ],
            options={
                'verbose_name': 'XML import',
                'verbose_name_plural': 'XML imports',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('picture_id', models.AutoField(primary_key=True, serialize=False)),
                ('recording_date', models.DateField(blank=True, null=True)),
                ('picture', models.BinaryField(blank=True, editable=True, null=True)),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
                ('groundwater_monitoring_well_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
            ],
            options={
                'verbose_name': 'Foto',
                'verbose_name_plural': 'Fotos',
                'db_table': 'gmw"."picture',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('maintenance_id', models.AutoField(primary_key=True, serialize=False)),
                ('notification_date', models.DateField(blank=True, null=True)),
                ('kind_of_maintenance', models.CharField(choices=[], max_length=254)),
                ('description', models.CharField(blank=True, max_length=254, null=True)),
                ('reporter', models.IntegerField(blank=True, null=True)),
                ('execution_date', models.DateField(blank=True, null=True)),
                ('execution_by', models.IntegerField(blank=True, null=True)),
                ('groundwater_monitoring_tube_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubestatic')),
                ('groundwater_monitoring_well_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
                ('picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.picture')),
            ],
            options={
                'verbose_name': 'Onderhoudsmoment',
                'verbose_name_plural': 'Onderhoudsmomenten',
                'db_table': 'gmw"."maintenance',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringWellDynamic',
            fields=[
                ('groundwater_monitoring_well_dynamic_id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_standpipes', models.IntegerField(blank=True, null=True)),
                ('ground_level_stable', models.CharField(blank=True, max_length=254, null=True)),
                ('well_stability', models.CharField(blank=True, choices=[('instabiel', 'instabiel'), ('stabielNAP', 'stabielNAP'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('owner', models.IntegerField(blank=True, null=True)),
                ('maintenance_responsible_party', models.IntegerField(blank=True, null=True)),
                ('well_head_protector', models.CharField(blank=True, choices=[('geen', 'geen'), ('kokerDeelsMetaal', 'kokerDeelsMetaal'), ('kokerMetaal', 'kokerMetaal'), ('kokerNietMetaal', 'kokerNietMetaal'), ('potNietWaterdicht', 'potNietWaterdicht'), ('potWaterdicht', 'potWaterdicht'), ('koker', 'koker'), ('onbekend', 'onbekend'), ('pot', 'pot')], max_length=200, null=True)),
                ('deliver_gld_to_bro', models.BooleanField(default=False)),
                ('ground_level_position', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('ground_level_positioning_method', models.CharField(blank=True, choices=[('afgeleidBovenkantBuis', 'afgeleidBovenkantBuis'), ('AHN2', 'AHN2'), ('AHN3', 'AHN3'), ('RTKGPS0tot4cm', 'RTKGPS0tot4cm'), ('RTKGPS4tot10cm', 'RTKGPS4tot10cm'), ('RTKGPS10tot20cm', 'RTKGPS10tot20cm'), ('RTKGPS20tot100cm', 'RTKGPS20tot100cm'), ('tachymetrie0tot10cm', 'tachymetrie0tot10cm'), ('tachymetrie10tot50cm', 'tachymetrie10tot50cm'), ('waterpassing0tot2cm', 'waterpassing0tot2cm'), ('waterpassing2tot4cm', 'waterpassing2tot4cm'), ('waterpassing4tot10cm', 'waterpassing4tot10cm'), ('AHN1', 'AHN1'), ('geen', 'geen'), ('GPSOnbekend', 'GPSOnbekend'), ('kaartOnbekend', 'kaartOnbekend'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('well_head_protector_subtype', models.CharField(blank=True, choices=[('DNS', 'DNS'), ('model X', 'model X'), ('onbekend', 'onbekend')], max_length=254, null=True)),
                ('lock', models.CharField(blank=True, choices=[('sleutel', 'sleutel'), ('inbus', 'inbus'), ('onbekend', 'onbekend')], max_length=254, null=True)),
                ('key', models.CharField(blank=True, max_length=254, null=True)),
                ('place', models.CharField(blank=True, max_length=254, null=True)),
                ('street', models.CharField(blank=True, max_length=254, null=True)),
                ('location_description', models.CharField(blank=True, max_length=254, null=True)),
                ('label', models.CharField(blank=True, choices=[('geen', 'geen'), ('sticker', 'sticker'), ('aluplaatje', 'aluplaatje'), ('onbekend', 'onbekend')], max_length=254, null=True)),
                ('foundation', models.CharField(blank=True, choices=[('geen', 'geen'), ('betonomstorting', 'betonomstorting'), ('onbekend', 'onbekend')], max_length=254, null=True)),
                ('collision_protection', models.CharField(blank=True, choices=[('geen', 'geen'), ('palen', 'palen'), ('hekwerk', 'hekwerk'), ('onbekend', 'onbekend')], max_length=254, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('groundwater_monitoring_well_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Put - Data Aanpassing',
                'verbose_name_plural': 'Grondwatermonitoring Putten - Data Aanpassingen',
                'db_table': 'gmw"."groundwater_monitoring_well_dynamic',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='groundwatermonitoringtubestatic',
            name='groundwater_monitoring_well_static',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic'),
        ),
        migrations.CreateModel(
            name='GroundwaterMonitoringTubeDynamic',
            fields=[
                ('groundwater_monitoring_tube_dynamic_id', models.AutoField(primary_key=True, serialize=False)),
                ('tube_top_diameter', models.IntegerField(blank=True, null=True)),
                ('variable_diameter', models.CharField(blank=True, max_length=200, null=True)),
                ('tube_status', models.CharField(blank=True, choices=[('onbruikbaar', 'onbruikbaar'), ('gebruiksklaar', 'gebruiksklaar'), ('nietGebruiksklaar', 'nietGebruiksklaar'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('tube_top_position', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('tube_top_positioning_method', models.CharField(blank=True, choices=[('afgeleidSbl', 'afgeleidSbl'), ('AHN2', 'AHN2'), ('AHN3', 'AHN3'), ('RTKGPS0tot4cm', 'RTKGPS0tot4cm'), ('RTKGPS4tot10cm', 'RTKGPS4tot10cm'), ('RTKGPS10tot20cm', 'RTKGPS10tot20cm'), ('RTKGPS20tot100cm', 'RTKGPS20tot100cm'), ('tachymetrie0tot10cm', 'tachymetrie0tot10cm'), ('tachymetrie10tot50cm', 'tachymetrie10tot50cm'), ('waterpassing0tot2cm', 'waterpassing0tot2cm'), ('waterpassing2tot4cm', 'waterpassing2tot4cm'), ('waterpassing4tot10cm', 'waterpassing4tot10cm'), ('AHN1', 'AHN1'), ('GPSOnbekend', 'GPSOnbekend'), ('kaartOnbekend', 'kaartOnbekend'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('tube_packing_material', models.CharField(blank=True, choices=[('bentoniet', 'bentoniet'), ('bentonietFiltergrind', 'bentonietFiltergrind'), ('boorgatmateriaal', 'boorgatmateriaal'), ('filtergrind', 'filtergrind'), ('grind', 'grind'), ('grout', 'grout'), ('volgensGerelateerdeVerkenning', 'volgensGerelateerdeVerkenning'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('glue', models.CharField(blank=True, choices=[('geen', 'geen'), ('ongespecificeerd', 'ongespecificeerd'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('plain_tube_part_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('inserted_part_diameter', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('inserted_part_length', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('inserted_part_material', models.CharField(blank=True, max_length=200, null=True)),
                ('groundwater_monitoring_tube_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubestatic')),
            ],
            options={
                'verbose_name': 'Grondwatermonitoring Filter - Data Aanpassingen',
                'verbose_name_plural': 'Grondwatermonitoring Filters - Data Aanpassingen',
                'db_table': 'gmw"."groundwater_monitoring_tube_dynamic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoOhmCable',
            fields=[
                ('geo_ohm_cable_id', models.AutoField(primary_key=True, serialize=False)),
                ('cable_number', models.IntegerField(blank=True, null=True)),
                ('groundwater_monitoring_tube_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubestatic')),
            ],
            options={
                'verbose_name': 'Geo Ohm Kabel',
                'verbose_name_plural': 'Geo Ohm Kabels',
                'db_table': 'gmw"."geo_ohm_cable_static',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('change_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(blank=True, choices=[('constructie', 'constructie'), ('beschermconstructieVeranderd', 'beschermconstructieVeranderd'), ('buisdeelIngeplaatst', 'buisdeelIngeplaatst'), ('buisIngekort', 'buisIngekort'), ('buisOpgelengd', 'buisOpgelengd'), ('buisstatusVeranderd', 'buisstatusVeranderd'), ('eigenaarVeranderd', 'eigenaarVeranderd'), ('elektrodestatusVeranderd', 'elektrodestatusVeranderd'), ('maaiveldVerlegd', 'maaiveldVerlegd'), ('nieuweBepalingMaaiveld', 'nieuweBepalingMaaiveld'), ('nieuweBepalingPosities', 'nieuweBepalingPosities'), ('nieuweInmetingMaaiveld', 'nieuweInmetingMaaiveld'), ('nieuweInmetingPosities', 'nieuweInmetingPosities'), ('onderhouderVeranderd', 'onderhouderVeranderd'), ('verkenningenAchterafRegistreren', 'verkenningenAchterafRegistreren')], max_length=200, null=True)),
                ('event_date', models.CharField(blank=True, max_length=254, null=True)),
                ('delivered_to_bro', models.BooleanField(blank=True, default=False)),
                ('electrode_dynamic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.electrodedynamic')),
                ('groundwater_monitoring_tube_dynamic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringtubedynamic')),
                ('groundwater_monitoring_well_dynamic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwelldynamic')),
                ('groundwater_monitoring_well_static', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.groundwatermonitoringwellstatic')),
            ],
            options={
                'verbose_name': 'Tussentijdse Gebeurtenis',
                'verbose_name_plural': 'Tussentijdse Gebeurtenissen',
                'db_table': 'gmw"."event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ElectrodeStatic',
            fields=[
                ('electrode_static_id', models.AutoField(primary_key=True, serialize=False)),
                ('electrode_packing_material', models.CharField(blank=True, choices=[('filtergrind', 'filtergrind'), ('klei', 'klei'), ('volgensGerelateerdeVerkenning', 'volgensGerelateerdeVerkenning'), ('zand', 'zand'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('electrode_position', models.CharField(blank=True, max_length=200, null=True)),
                ('electrode_number', models.IntegerField(blank=True, null=True)),
                ('geo_ohm_cable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.geoohmcable')),
            ],
            options={
                'verbose_name': 'Electrode - Statische gegevens',
                'verbose_name_plural': 'Electrodes - Statische gegevens',
                'db_table': 'gmw"."electrode_static',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='electrodedynamic',
            name='electrode_static',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gmw.electrodestatic'),
        ),
    ]
