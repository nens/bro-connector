# Generated by Django 4.0.3 on 2024-02-08 09:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='gld_addition_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.CharField(blank=True, max_length=254, null=True)),
                ('observation_id', models.CharField(blank=True, max_length=254, null=True)),
                ('start', models.CharField(blank=True, max_length=254, null=True)),
                ('end', models.CharField(blank=True, max_length=254, null=True)),
                ('broid_registration', models.CharField(blank=True, max_length=254, null=True)),
                ('procedure_uuid', models.CharField(blank=True, max_length=254, null=True)),
                ('procedure_initialized', models.CharField(blank=True, max_length=254, null=True)),
                ('validation_status', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_id', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_status', models.CharField(blank=True, max_length=254, null=True)),
                ('comments', models.CharField(blank=True, max_length=50000, null=True)),
                ('file', models.CharField(blank=True, max_length=254, null=True)),
                ('addition_type', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'GLD Toevoeging Log',
                'verbose_name_plural': 'GLD Toevoeging Logs',
                'db_table': 'aanlevering"."gld_addition_log',
            },
        ),
        migrations.CreateModel(
            name='gld_registration_log',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_modified', models.CharField(blank=True, max_length=254, null=True)),
                ('gwm_bro_id', models.CharField(blank=True, max_length=254, null=True)),
                ('filter_id', models.CharField(blank=True, max_length=254, null=True)),
                ('validation_status', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_id', models.CharField(blank=True, max_length=254, null=True)),
                ('levering_status', models.CharField(blank=True, max_length=254, null=True)),
                ('gld_bro_id', models.CharField(blank=True, max_length=254, null=True)),
                ('comments', models.CharField(blank=True, max_length=10000, null=True)),
                ('last_changed', models.CharField(blank=True, max_length=254, null=True)),
                ('corrections_applied', models.BooleanField(blank=True, null=True)),
                ('timestamp_end_registration', models.DateTimeField(blank=True, null=True)),
                ('quality_regime', models.CharField(blank=True, choices=[('IMBRO', 'IMBRO'), ('IMBRO/A', 'IMBRO/A')], max_length=254, null=True)),
                ('file', models.CharField(blank=True, max_length=254, null=True)),
                ('process_status', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'GLD Registratie Log',
                'verbose_name_plural': 'GLD Registratie logs',
                'db_table': 'aanlevering"."gld_registration_log',
            },
        ),
        migrations.CreateModel(
            name='GroundwaterLevelDossier',
            fields=[
                ('groundwater_level_dossier_id', models.AutoField(primary_key=True, serialize=False)),
                ('groundwater_monitoring_tube_id', models.IntegerField(blank=True, null=True)),
                ('gmw_bro_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tube_number', models.IntegerField(blank=True, null=True)),
                ('gld_bro_id', models.CharField(blank=True, max_length=255, null=True)),
                ('research_start_date', models.DateField(blank=True, null=True)),
                ('research_last_date', models.DateField(blank=True, null=True)),
                ('research_last_correction', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Grondwaterstand dossier',
                'verbose_name_plural': 'Grondwaterstand dossiers',
                'db_table': 'gld"."groundwater_level_dossier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasurementPointMetadata',
            fields=[
                ('measurement_point_metadata_id', models.AutoField(primary_key=True, serialize=False)),
                ('qualifier_by_category', models.CharField(blank=True, choices=[('afgekeurd', 'afgekeurd'), ('goedgekeurd', 'goedgekeurd'), ('nogNietBeoordeeld', 'nogNietBeoordeeld'), ('onbeslist', 'onbeslist'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('censored_reason', models.CharField(blank=True, choices=[('groterDanLimietwaarde', 'groterDanLimietwaarde'), ('kleinerDanLimietwaarde', 'kleinerDanLimietwaarde'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('qualifier_by_quantity', models.DecimalField(blank=True, decimal_places=10, max_digits=100, null=True)),
                ('interpolation_code', models.CharField(blank=True, choices=[('discontinu', 'discontinu')], max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Meetpunt Metadata',
                'verbose_name_plural': 'Meetpunt Metadata',
                'db_table': 'gld"."measurement_point_metadata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObservationProcess',
            fields=[
                ('observation_process_id', models.AutoField(primary_key=True, serialize=False)),
                ('process_reference', models.CharField(blank=True, choices=[('NEN5120v1991', 'NEN5120v1991'), ('NEN_EN_ISO22475v2006_C11v2010', 'NEN_EN_ISO22475v2006_C11v2010'), ('NEN_ISO21413v2005', 'NEN_ISO21413v2005'), ('NPR_ISO.TR23211v2009', 'NPR_ISO.TR23211v2009'), ('RWSgwmon', 'RWSgwmon'), ('STOWAgwst', 'STOWAgwst'), ('vitensMeetprotocolGrondwater', 'vitensMeetprotocolGrondwater'), ('waternetMeetprocedure', 'waternetMeetprocedure'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('measurement_instrument_type', models.CharField(blank=True, choices=[('akoestischeSensor', 'akoestischeSensor'), ('akoestischHandapparaat', 'akoestischHandapparaat'), ('analoogPeilklokje', 'analoogPeilklokje'), ('druksensor', 'druksensor'), ('elektronischPeilklokje', 'elektronischPeilklokje'), ('opzetStuk', 'opzetStuk'), ('radarsensor', 'radarsensor'), ('stereoDruksensor', 'stereoDruksensor'), ('onbekend', 'onbekend'), ('onbekendPeilklokje', 'onbekendPeilklokje')], max_length=200, null=True)),
                ('air_pressure_compensation_type', models.CharField(blank=True, choices=[('capillair', 'capillair'), ('gecorrigeerdLokaleMeting', 'gecorrigeerdLokaleMeting'), ('KNMImeting', 'KNMImeting'), ('monitoringnetmeting', 'monitoringnetmeting'), ('putlocatiemeting', 'putlocatiemeting'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('process_type', models.CharField(blank=True, choices=[('algoritme', 'algoritme')], max_length=200, null=True)),
                ('evaluation_procedure', models.CharField(blank=True, choices=[('brabantWater2013', 'brabantWater2013'), ('eijkelkampDataValidatiev0.0.9', 'eijkelkampDataValidatiev0.0.9'), ('oordeelDeskundige', 'oordeelDeskundige'), ('PMBProtocolDatakwaliteitscontroleQC2018v2.0', 'PMBProtocolDatakwaliteitscontroleQC2018v2.0'), ('RWSAATGrondwaterv1.0', 'RWSAATGrondwaterv1.0'), ('validatieprocedureEvidesWaterbedrijf', 'validatieprocedureEvidesWaterbedrijf'), ('vitensBeoordelingsprotocolGrondwater', 'vitensBeoordelingsprotocolGrondwater'), ('warecoWaterDataValidatieProtocolv20200219', 'warecoWaterDataValidatieProtocolv20200219'), ('waternetBeoordelingsprocedure', 'waternetBeoordelingsprocedure'), ('onbekend', 'onbekend')], max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Observatie Process',
                'verbose_name_plural': 'Observatie Process',
                'db_table': 'gld"."observation_process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ResponsibleParty',
            fields=[
                ('responsible_party_id', models.AutoField(primary_key=True, serialize=False)),
                ('identification', models.IntegerField(blank=True, null=True)),
                ('organisation_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Verantwoordelijke Partij',
                'verbose_name_plural': 'Verantwoordelijke Partij',
                'db_table': 'gld"."responsible_party',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObservationMetadata',
            fields=[
                ('observation_metadata_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_stamp', models.DateField(blank=True, null=True)),
                ('observation_type', models.CharField(blank=True, choices=[('controlemeting', 'controlemeting'), ('reguliereMeting', 'reguliereMeting')], max_length=200, null=True)),
                ('status', models.CharField(blank=True, choices=[('volledigBeoordeeld', 'volledigBeoordeeld'), ('voorlopig', 'voorlopig'), ('onbekend', 'onbekend')], max_length=200, null=True)),
                ('responsible_party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gld.responsibleparty')),
            ],
            options={
                'verbose_name': 'Observatie Metadata',
                'verbose_name_plural': 'Observatie Metadata',
                'db_table': 'gld"."observation_metadata',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('observation_id', models.AutoField(primary_key=True, serialize=False)),
                ('observationperiod', models.DurationField(blank=True, null=True)),
                ('observation_starttime', models.DateTimeField(blank=True, null=True)),
                ('result_time', models.DateTimeField(blank=True, null=True)),
                ('observation_endtime', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('groundwater_level_dossier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gld.groundwaterleveldossier')),
                ('observation_metadata', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gld.observationmetadata')),
                ('observation_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gld.observationprocess')),
            ],
            options={
                'verbose_name': 'Observatie',
                'verbose_name_plural': 'Observaties',
                'db_table': 'gld"."observation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasurementTvp',
            fields=[
                ('measurement_tvp_id', models.AutoField(primary_key=True, serialize=False)),
                ('measurement_time', models.DateTimeField(blank=True, null=True)),
                ('field_value', models.DecimalField(blank=True, decimal_places=3, max_digits=25, null=True)),
                ('field_value_unit', models.CharField(blank=True, max_length=255, null=True)),
                ('calculated_value', models.DecimalField(blank=True, decimal_places=5, max_digits=25, null=True)),
                ('corrected_value', models.DecimalField(blank=True, decimal_places=5, max_digits=25, null=True)),
                ('correction_time', models.DateTimeField(blank=True, null=True)),
                ('correction_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_point_metadata', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gld.measurementpointmetadata')),
                ('observation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gld.observation')),
            ],
            options={
                'verbose_name': 'Metingen Tijd-Waarde paren',
                'verbose_name_plural': 'Metingen Tijd-Waarde paren',
                'db_table': 'gld"."measurement_tvp',
                'managed': True,
            },
        ),
    ]
